#!/usr/bin/env python

import os, re, sys
from itertools import ifilter, imap

class DVDInfo(dict):
    def __init__(self, lines=None): # pylint: disable-msg=W0231
        if lines is None:
            lines = os.popen('dvdbackup --info 2>&1')
        self.parse(lines)

    def parse(self, lines):
        for m in ifilter(
            None,
            imap(re.compile('DVD with title (\S+)').search, lines)):
            self['title'] = m.group(1)

def rip():
    info = DVDInfo()
    if not info.get('title'):
        print >>sys.stderr, "no title found"
        sys.exit(1)

    print '%s -- ripping' % info['title']

    os.system('dvdbackup --mirror -o ~/Videos/ 2> /dev/null && eject')

    videodir = '~/Videos/%s' % info['title']
    if not os.path.isdir(videodir):
        print >>sys.stderr, '%s: DVD directory missing (%s)' % (
            sys.argv[0], videodir)
        sys.exit(1)

def make_isopath(title):
    return '~/Videos/%s.iso' % title

def convert(title, videodir, isopath):
    print '%s -- converting to ISO' % title

    isopath = os.path.expanduser(isopath)
    videodir = os.path.expanduser(videodir)
    cmd = ("genisoimage -dvd-video -o '%(isopath)s' '%(videodir)s'" % (
            locals()))
    print cmd
    stat = os.system(cmd)
    if stat:
        print >>sys.stderr, '%s: RIP okay, ISO failed (%s))' % (
            sys.argv[0], isopath)
        sys.exit(1)

def find_dirs():
    lines = os.popen('du -sh ~/Videos/*/VIDEO_TS')
    for line in lines:
        size,tsdir = line.strip().split(None,1)
        if size.endswith('G'):
            yield os.path.dirname(tsdir)

def scan_convert():
    for videodir in find_dirs():
        print videodir
        title = os.path.basename(videodir)
        isopath = make_isopath(title)
        if os.path.exists(isopath):
            print '- skipped'
        else:
            convert(title, videodir, isopath)

def main():
    rip()


if __name__=='__main__':
    main()

